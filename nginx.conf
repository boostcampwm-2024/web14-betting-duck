worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # 업스트림 서버 정의
    upstream backend_servers {
        # 백엔드 서버 목록 (로드 밸런싱 대상 서버)
        server betting_duck_app:3001;  # 컨테이너 이름 또는 IP 주소와 포트
        # server backend2:3000;  # 여러 백엔드 서버를 정의
        # server backend3:3000;  # 필요에 따라 서버를 추가
    }

    server {
        listen 80;

        # 요청이 들어오면 업스트림 서버로 프록시 처리
        location / {
            proxy_pass http://backend_servers;  # 로드 밸런싱 대상 서버 그룹
            proxy_set_header Host $host;  # 원본 요청의 호스트 헤더 전달
            proxy_set_header X-Real-IP $remote_addr;  # 클라이언트의 실제 IP 주소 전달
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # 클라이언트의 체인된 IP 주소 전달
            proxy_set_header X-Forwarded-Proto $scheme;  # 사용한 프로토콜 (http/https) 전달
        }

        # 건강 체크를 위한 설정
        # location /health {
        #     proxy_pass http://kafdrop:9000/;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }

        # 기본 프록시 설정
        # location / {
        #     try_files $uri @kafdrop;
        # }

        # location @kafdrop {
        #     proxy_pass http://kafdrop:9000;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }
    }

    # 로깅 설정
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}
